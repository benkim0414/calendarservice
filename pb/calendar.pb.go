// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/calendar.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Calendar struct {
	// Identifier of the calendar.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Title of the calendar.
	Summary string `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	// Description of the calendar. Optional.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Geographic location of the calendar as free-form text. Optional.
	Location string `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	// The time zone of the calendar. (Formatted as an IANA Time Zone Database name, e.g. "Europe/Zurich".) Optional.
	TimeZone             string   `protobuf:"bytes,5,opt,name=time_zone,json=timeZone,proto3" json:"time_zone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Calendar) Reset()         { *m = Calendar{} }
func (m *Calendar) String() string { return proto.CompactTextString(m) }
func (*Calendar) ProtoMessage()    {}
func (*Calendar) Descriptor() ([]byte, []int) {
	return fileDescriptor_9149431be0552851, []int{0}
}

func (m *Calendar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Calendar.Unmarshal(m, b)
}
func (m *Calendar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Calendar.Marshal(b, m, deterministic)
}
func (m *Calendar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Calendar.Merge(m, src)
}
func (m *Calendar) XXX_Size() int {
	return xxx_messageInfo_Calendar.Size(m)
}
func (m *Calendar) XXX_DiscardUnknown() {
	xxx_messageInfo_Calendar.DiscardUnknown(m)
}

var xxx_messageInfo_Calendar proto.InternalMessageInfo

func (m *Calendar) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Calendar) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *Calendar) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Calendar) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *Calendar) GetTimeZone() string {
	if m != nil {
		return m.TimeZone
	}
	return ""
}

type Event struct {
	// Opaque identifier of the event.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Status of the event. Possible values are:
	// "confirmed" - The event is confirmed. This is the default status.
	// "tentative" - The event is tentatively confirmed.
	// "cancelled" - The event is cancelled (deleted).
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// An absolute link to this event in the Google Calendar Web UI.
	HtmlLink string `protobuf:"bytes,3,opt,name=html_link,json=htmlLink,proto3" json:"html_link,omitempty"`
	// Creation time of the event (as a RFC3339 timestamp). Read-only.
	CreateTime string `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Last modification time of the event (as a RFC3339 timestamp). Read-only.
	UpdateTime string `protobuf:"bytes,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Title of the event.
	Summary string `protobuf:"bytes,6,opt,name=summary,proto3" json:"summary,omitempty"`
	// Description of the event. Can contain HTML. Optional.
	Description string `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	// Geographic location of the event as free-form text. Optional.
	Location string `protobuf:"bytes,8,opt,name=location,proto3" json:"location,omitempty"`
	// The creator of the event.
	Creator string `protobuf:"bytes,9,opt,name=creator,proto3" json:"creator,omitempty"`
	// The organizer of the event.
	Organizer string `protobuf:"bytes,10,opt,name=organizer,proto3" json:"organizer,omitempty"`
	// The (inclusive) start time of the event (formatted according to RFC3339).
	StartTime string `protobuf:"bytes,11,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// The (exclusive) end time of the event (formatted according to RFC3339).
	EndTime string `protobuf:"bytes,12,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// Event unique identifier as defined in RFC5545.
	ICalUid string `protobuf:"bytes,13,opt,name=i_cal_uid,json=iCalUid,proto3" json:"i_cal_uid,omitempty"`
	// The attendees of the event.
	Attendees            []*Attendee `protobuf:"bytes,14,rep,name=attendees,proto3" json:"attendees,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_9149431be0552851, []int{1}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Event) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Event) GetHtmlLink() string {
	if m != nil {
		return m.HtmlLink
	}
	return ""
}

func (m *Event) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *Event) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *Event) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *Event) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *Event) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Event) GetOrganizer() string {
	if m != nil {
		return m.Organizer
	}
	return ""
}

func (m *Event) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *Event) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *Event) GetICalUid() string {
	if m != nil {
		return m.ICalUid
	}
	return ""
}

func (m *Event) GetAttendees() []*Attendee {
	if m != nil {
		return m.Attendees
	}
	return nil
}

type Attendee struct {
	// The attendee's Profile ID, if available.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The attendee's email address, if available.
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// The attendee's name, if available.
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Whether the attendee is the organizer of the event.
	Organizer bool `protobuf:"varint,4,opt,name=organizer,proto3" json:"organizer,omitempty"`
	// Whether this is an optional attendee.
	Optional bool `protobuf:"varint,5,opt,name=optional,proto3" json:"optional,omitempty"`
	// The attendee's response status. Possible values are:
	// "needsAction" - The attendee has not responded to the invitation.
	// "declined" - The attendee has declined the invitation.
	// "tentative" - The attendee has tentatively accepted the invitation.
	// "accepted" - The attendee has accepted the invitation.
	ResponseStatus string `protobuf:"bytes,6,opt,name=response_status,json=responseStatus,proto3" json:"response_status,omitempty"`
	// The attendee's response comment.
	Comment string `protobuf:"bytes,7,opt,name=comment,proto3" json:"comment,omitempty"`
	// Number of additional guests.
	AdditionalGuests     int64    `protobuf:"varint,8,opt,name=additionalGuests,proto3" json:"additionalGuests,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Attendee) Reset()         { *m = Attendee{} }
func (m *Attendee) String() string { return proto.CompactTextString(m) }
func (*Attendee) ProtoMessage()    {}
func (*Attendee) Descriptor() ([]byte, []int) {
	return fileDescriptor_9149431be0552851, []int{2}
}

func (m *Attendee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Attendee.Unmarshal(m, b)
}
func (m *Attendee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Attendee.Marshal(b, m, deterministic)
}
func (m *Attendee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Attendee.Merge(m, src)
}
func (m *Attendee) XXX_Size() int {
	return xxx_messageInfo_Attendee.Size(m)
}
func (m *Attendee) XXX_DiscardUnknown() {
	xxx_messageInfo_Attendee.DiscardUnknown(m)
}

var xxx_messageInfo_Attendee proto.InternalMessageInfo

func (m *Attendee) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Attendee) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Attendee) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Attendee) GetOrganizer() bool {
	if m != nil {
		return m.Organizer
	}
	return false
}

func (m *Attendee) GetOptional() bool {
	if m != nil {
		return m.Optional
	}
	return false
}

func (m *Attendee) GetResponseStatus() string {
	if m != nil {
		return m.ResponseStatus
	}
	return ""
}

func (m *Attendee) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *Attendee) GetAdditionalGuests() int64 {
	if m != nil {
		return m.AdditionalGuests
	}
	return 0
}

type GetCalendarRequest struct {
	// The field will contain name of the resource requested.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCalendarRequest) Reset()         { *m = GetCalendarRequest{} }
func (m *GetCalendarRequest) String() string { return proto.CompactTextString(m) }
func (*GetCalendarRequest) ProtoMessage()    {}
func (*GetCalendarRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9149431be0552851, []int{3}
}

func (m *GetCalendarRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCalendarRequest.Unmarshal(m, b)
}
func (m *GetCalendarRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCalendarRequest.Marshal(b, m, deterministic)
}
func (m *GetCalendarRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCalendarRequest.Merge(m, src)
}
func (m *GetCalendarRequest) XXX_Size() int {
	return xxx_messageInfo_GetCalendarRequest.Size(m)
}
func (m *GetCalendarRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCalendarRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCalendarRequest proto.InternalMessageInfo

func (m *GetCalendarRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateCalendarRequest struct {
	// The calendar to create.
	Calendar             *Calendar `protobuf:"bytes,1,opt,name=calendar,proto3" json:"calendar,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateCalendarRequest) Reset()         { *m = CreateCalendarRequest{} }
func (m *CreateCalendarRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCalendarRequest) ProtoMessage()    {}
func (*CreateCalendarRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9149431be0552851, []int{4}
}

func (m *CreateCalendarRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCalendarRequest.Unmarshal(m, b)
}
func (m *CreateCalendarRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCalendarRequest.Marshal(b, m, deterministic)
}
func (m *CreateCalendarRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCalendarRequest.Merge(m, src)
}
func (m *CreateCalendarRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCalendarRequest.Size(m)
}
func (m *CreateCalendarRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCalendarRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCalendarRequest proto.InternalMessageInfo

func (m *CreateCalendarRequest) GetCalendar() *Calendar {
	if m != nil {
		return m.Calendar
	}
	return nil
}

type DeleteCalendarRequest struct {
	// The resource name of the calendar to be deleted.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCalendarRequest) Reset()         { *m = DeleteCalendarRequest{} }
func (m *DeleteCalendarRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCalendarRequest) ProtoMessage()    {}
func (*DeleteCalendarRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9149431be0552851, []int{5}
}

func (m *DeleteCalendarRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCalendarRequest.Unmarshal(m, b)
}
func (m *DeleteCalendarRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCalendarRequest.Marshal(b, m, deterministic)
}
func (m *DeleteCalendarRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCalendarRequest.Merge(m, src)
}
func (m *DeleteCalendarRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCalendarRequest.Size(m)
}
func (m *DeleteCalendarRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCalendarRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCalendarRequest proto.InternalMessageInfo

func (m *DeleteCalendarRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ListEventsRequest struct {
	// The parent resource name.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous List request, if any.
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListEventsRequest) Reset()         { *m = ListEventsRequest{} }
func (m *ListEventsRequest) String() string { return proto.CompactTextString(m) }
func (*ListEventsRequest) ProtoMessage()    {}
func (*ListEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9149431be0552851, []int{6}
}

func (m *ListEventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEventsRequest.Unmarshal(m, b)
}
func (m *ListEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEventsRequest.Marshal(b, m, deterministic)
}
func (m *ListEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEventsRequest.Merge(m, src)
}
func (m *ListEventsRequest) XXX_Size() int {
	return xxx_messageInfo_ListEventsRequest.Size(m)
}
func (m *ListEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListEventsRequest proto.InternalMessageInfo

func (m *ListEventsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListEventsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListEventsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListEventsResponse struct {
	// The field name should match the noun "events" in the method name.  There
	// will be a maximum number of items returned based on the page_size field
	// in the request.
	Events []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no
	// more results in the list.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListEventsResponse) Reset()         { *m = ListEventsResponse{} }
func (m *ListEventsResponse) String() string { return proto.CompactTextString(m) }
func (*ListEventsResponse) ProtoMessage()    {}
func (*ListEventsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9149431be0552851, []int{7}
}

func (m *ListEventsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEventsResponse.Unmarshal(m, b)
}
func (m *ListEventsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEventsResponse.Marshal(b, m, deterministic)
}
func (m *ListEventsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEventsResponse.Merge(m, src)
}
func (m *ListEventsResponse) XXX_Size() int {
	return xxx_messageInfo_ListEventsResponse.Size(m)
}
func (m *ListEventsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEventsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListEventsResponse proto.InternalMessageInfo

func (m *ListEventsResponse) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *ListEventsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetEventRequest struct {
	// The field will contain name of the resource requested.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEventRequest) Reset()         { *m = GetEventRequest{} }
func (m *GetEventRequest) String() string { return proto.CompactTextString(m) }
func (*GetEventRequest) ProtoMessage()    {}
func (*GetEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9149431be0552851, []int{8}
}

func (m *GetEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventRequest.Unmarshal(m, b)
}
func (m *GetEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventRequest.Marshal(b, m, deterministic)
}
func (m *GetEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventRequest.Merge(m, src)
}
func (m *GetEventRequest) XXX_Size() int {
	return xxx_messageInfo_GetEventRequest.Size(m)
}
func (m *GetEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventRequest proto.InternalMessageInfo

func (m *GetEventRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateEventRequest struct {
	// The parent resource name where the event is to be created.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The text describing the event to be created.
	Text                 string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateEventRequest) Reset()         { *m = CreateEventRequest{} }
func (m *CreateEventRequest) String() string { return proto.CompactTextString(m) }
func (*CreateEventRequest) ProtoMessage()    {}
func (*CreateEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9149431be0552851, []int{9}
}

func (m *CreateEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateEventRequest.Unmarshal(m, b)
}
func (m *CreateEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateEventRequest.Marshal(b, m, deterministic)
}
func (m *CreateEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateEventRequest.Merge(m, src)
}
func (m *CreateEventRequest) XXX_Size() int {
	return xxx_messageInfo_CreateEventRequest.Size(m)
}
func (m *CreateEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateEventRequest proto.InternalMessageInfo

func (m *CreateEventRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateEventRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type DeleteEventRequest struct {
	// The resource name of the event to be deleted.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteEventRequest) Reset()         { *m = DeleteEventRequest{} }
func (m *DeleteEventRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteEventRequest) ProtoMessage()    {}
func (*DeleteEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9149431be0552851, []int{10}
}

func (m *DeleteEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteEventRequest.Unmarshal(m, b)
}
func (m *DeleteEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteEventRequest.Marshal(b, m, deterministic)
}
func (m *DeleteEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteEventRequest.Merge(m, src)
}
func (m *DeleteEventRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteEventRequest.Size(m)
}
func (m *DeleteEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteEventRequest proto.InternalMessageInfo

func (m *DeleteEventRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*Calendar)(nil), "kordevaus.Calendar")
	proto.RegisterType((*Event)(nil), "kordevaus.Event")
	proto.RegisterType((*Attendee)(nil), "kordevaus.Attendee")
	proto.RegisterType((*GetCalendarRequest)(nil), "kordevaus.GetCalendarRequest")
	proto.RegisterType((*CreateCalendarRequest)(nil), "kordevaus.CreateCalendarRequest")
	proto.RegisterType((*DeleteCalendarRequest)(nil), "kordevaus.DeleteCalendarRequest")
	proto.RegisterType((*ListEventsRequest)(nil), "kordevaus.ListEventsRequest")
	proto.RegisterType((*ListEventsResponse)(nil), "kordevaus.ListEventsResponse")
	proto.RegisterType((*GetEventRequest)(nil), "kordevaus.GetEventRequest")
	proto.RegisterType((*CreateEventRequest)(nil), "kordevaus.CreateEventRequest")
	proto.RegisterType((*DeleteEventRequest)(nil), "kordevaus.DeleteEventRequest")
}

func init() { proto.RegisterFile("pb/calendar.proto", fileDescriptor_9149431be0552851) }

var fileDescriptor_9149431be0552851 = []byte{
	// 903 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x55, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0x86, 0x64, 0x4b, 0xa1, 0x46, 0xb1, 0x94, 0x6c, 0x1b, 0x97, 0x61, 0xec, 0xda, 0x21, 0xd0,
	0x46, 0x70, 0x01, 0x31, 0x4e, 0x91, 0x8b, 0x81, 0x02, 0x4d, 0xdd, 0xc0, 0x3d, 0x04, 0x45, 0x21,
	0xa7, 0x97, 0x5c, 0x88, 0xb5, 0x38, 0x91, 0xb7, 0x26, 0x77, 0x59, 0xee, 0xca, 0x88, 0x5d, 0xf4,
	0xd2, 0x17, 0xe8, 0xa1, 0x7d, 0x87, 0xbe, 0x4b, 0xaf, 0x7d, 0x85, 0x3e, 0x46, 0x0f, 0xc5, 0xfe,
	0x90, 0x26, 0x4d, 0xd9, 0x3e, 0x59, 0xf3, 0x7d, 0xe3, 0xf9, 0xe6, 0xe7, 0x5b, 0x10, 0x1e, 0xe6,
	0x27, 0xd1, 0x9c, 0xa6, 0xc8, 0x13, 0x5a, 0x4c, 0xf3, 0x42, 0x28, 0x41, 0x06, 0x67, 0xa2, 0x48,
	0xf0, 0x9c, 0x2e, 0x65, 0xb0, 0xb5, 0x10, 0x62, 0x91, 0x62, 0x44, 0x73, 0x16, 0x51, 0xce, 0x85,
	0xa2, 0x8a, 0x09, 0x2e, 0x6d, 0x62, 0xf0, 0x49, 0x8d, 0x9d, 0xa7, 0x0c, 0xb9, 0x72, 0xc4, 0x13,
	0x47, 0x98, 0xe8, 0x64, 0xf9, 0x3e, 0xc2, 0x2c, 0x57, 0x17, 0x96, 0x0c, 0x7f, 0xef, 0x80, 0x77,
	0xe8, 0x14, 0xc9, 0x08, 0xba, 0x2c, 0xf1, 0x3b, 0xbb, 0x9d, 0xc9, 0x60, 0xd6, 0x65, 0x09, 0xf1,
	0xe1, 0x9e, 0x5c, 0x66, 0x19, 0x2d, 0x2e, 0xfc, 0xae, 0x01, 0xcb, 0x90, 0xec, 0xc2, 0x30, 0x41,
	0x39, 0x2f, 0x58, 0xae, 0x5b, 0xf0, 0xd7, 0x0c, 0x5b, 0x87, 0x48, 0x00, 0x5e, 0x2a, 0xe6, 0xa6,
	0x43, 0x7f, 0xdd, 0xd0, 0x55, 0x4c, 0x9e, 0xc0, 0x40, 0xb1, 0x0c, 0xe3, 0x4b, 0xc1, 0xd1, 0xef,
	0x59, 0x52, 0x03, 0xef, 0x04, 0xc7, 0xf0, 0xaf, 0x35, 0xe8, 0xbd, 0x3e, 0x47, 0xae, 0x5a, 0xed,
	0x6c, 0x42, 0x5f, 0x2a, 0xaa, 0x96, 0xd2, 0x75, 0xe3, 0x22, 0x5d, 0xee, 0x54, 0x65, 0x69, 0x9c,
	0x32, 0x7e, 0xe6, 0x5a, 0xf1, 0x34, 0xf0, 0x86, 0xf1, 0x33, 0xb2, 0x03, 0xc3, 0x79, 0x81, 0x54,
	0x61, 0xac, 0x15, 0x5c, 0x2b, 0x60, 0xa1, 0xb7, 0x2c, 0x43, 0x9d, 0xb0, 0xcc, 0x93, 0x2a, 0xc1,
	0xb6, 0x03, 0x16, 0x32, 0x09, 0xb5, 0x2d, 0xf4, 0x6f, 0xdd, 0xc2, 0xbd, 0xdb, 0xb7, 0xe0, 0x5d,
	0xdb, 0x82, 0x0f, 0xf7, 0x4c, 0x1b, 0xa2, 0xf0, 0x07, 0xb6, 0xae, 0x0b, 0xc9, 0x16, 0x0c, 0x44,
	0xb1, 0xa0, 0x9c, 0x5d, 0x62, 0xe1, 0x83, 0xe1, 0xae, 0x00, 0xb2, 0x0d, 0x20, 0x15, 0x2d, 0x94,
	0xed, 0x77, 0x68, 0x69, 0x83, 0x98, 0x76, 0x1f, 0x83, 0x87, 0x3c, 0xb1, 0xe4, 0x7d, 0x5b, 0x17,
	0x79, 0x62, 0xa8, 0x00, 0x06, 0x2c, 0x9e, 0xd3, 0x34, 0x5e, 0xb2, 0xc4, 0xdf, 0xb0, 0x1c, 0x3b,
	0xa4, 0xe9, 0x8f, 0x2c, 0x21, 0xfb, 0x30, 0xa0, 0x4a, 0x21, 0x4f, 0x10, 0xa5, 0x3f, 0xda, 0x5d,
	0x9b, 0x0c, 0x5f, 0x7c, 0x34, 0xad, 0xbc, 0x37, 0x7d, 0xe5, 0xb8, 0xd9, 0x55, 0x56, 0xf8, 0x5f,
	0x07, 0xbc, 0x12, 0x6f, 0x1d, 0xeb, 0x63, 0xe8, 0x61, 0x46, 0x59, 0xea, 0x6e, 0x65, 0x03, 0xf2,
	0x14, 0xee, 0x27, 0x4c, 0xe6, 0x29, 0xbd, 0x88, 0x39, 0xcd, 0xb0, 0x32, 0x8e, 0xc5, 0xbe, 0xa7,
	0x19, 0x36, 0x87, 0xd7, 0xe7, 0xf2, 0xea, 0xc3, 0x07, 0xe0, 0x09, 0xb3, 0x5a, 0x9a, 0x9a, 0x53,
	0x79, 0xb3, 0x2a, 0x26, 0xcf, 0x60, 0x5c, 0xa0, 0xcc, 0x05, 0x97, 0x18, 0x3b, 0xa3, 0xd8, 0x83,
	0x8d, 0x4a, 0xf8, 0xd8, 0x1a, 0x46, 0x6f, 0x5e, 0x64, 0x19, 0x72, 0xe5, 0x6e, 0x56, 0x86, 0x64,
	0x0f, 0x1e, 0xd0, 0x24, 0x61, 0xb6, 0xe0, 0xd1, 0x12, 0xa5, 0x92, 0xe6, 0x6e, 0x6b, 0xb3, 0x16,
	0x1e, 0x4e, 0x80, 0x1c, 0xa1, 0x2a, 0x1f, 0xcf, 0x0c, 0x7f, 0xd6, 0x30, 0x21, 0xb0, 0x6e, 0x26,
	0xb3, 0x9b, 0x30, 0xbf, 0xc3, 0xef, 0xe0, 0xd1, 0xa1, 0x31, 0xdc, 0xf5, 0xe4, 0x08, 0xbc, 0xf2,
	0xb9, 0x9b, 0x7f, 0x68, 0xee, 0xbc, 0xca, 0xae, 0x92, 0xc2, 0x2f, 0xe0, 0xd1, 0xb7, 0x98, 0x62,
	0xbb, 0xd2, 0x2a, 0xd9, 0x05, 0x3c, 0x7c, 0xc3, 0xa4, 0x32, 0x8f, 0x49, 0x96, 0x89, 0x9b, 0xd0,
	0xcf, 0x69, 0xa1, 0x47, 0xb7, 0xa9, 0x2e, 0xd2, 0x8f, 0x28, 0xa7, 0x0b, 0x8c, 0x25, 0xbb, 0x44,
	0x73, 0xb3, 0xde, 0xcc, 0xd3, 0xc0, 0x31, 0xbb, 0x44, 0x6d, 0x39, 0x43, 0x2a, 0x71, 0x86, 0xe5,
	0x6b, 0x37, 0xe9, 0x6f, 0x35, 0x10, 0xbe, 0x07, 0x52, 0x17, 0xb2, 0xbb, 0x26, 0x13, 0xe8, 0xa3,
	0x41, 0xfc, 0x8e, 0xb1, 0xd3, 0x83, 0xda, 0x68, 0x26, 0x75, 0xe6, 0x78, 0xf2, 0x39, 0x8c, 0x39,
	0x7e, 0x50, 0x71, 0x4d, 0xc3, 0xba, 0x66, 0x43, 0xc3, 0x3f, 0x54, 0x3a, 0x9f, 0xc1, 0xf8, 0x08,
	0xad, 0xcc, 0x6d, 0x73, 0x7f, 0x0d, 0xc4, 0xae, 0xbb, 0x91, 0x79, 0xd3, 0xe0, 0x04, 0xd6, 0x15,
	0x7e, 0x50, 0x4e, 0xd1, 0xfc, 0xd6, 0xa7, 0xb5, 0x6b, 0xbe, 0x4b, 0xeb, 0xc5, 0x9f, 0x7d, 0x18,
	0x97, 0xb7, 0x38, 0xc6, 0xe2, 0x9c, 0xcd, 0x91, 0x50, 0x18, 0xd6, 0x8c, 0x41, 0xb6, 0x6b, 0x73,
	0xb7, 0x0d, 0x13, 0xac, 0xba, 0x78, 0xf8, 0xe9, 0x6f, 0xff, 0xfc, 0xfb, 0x47, 0xd7, 0x27, 0x9b,
	0xd1, 0xf9, 0x7e, 0xf4, 0x8b, 0x56, 0xfa, 0xaa, 0xf4, 0x80, 0x8c, 0xf6, 0x7e, 0x25, 0xa7, 0x30,
	0x6a, 0x3a, 0x8a, 0xec, 0xd6, 0xcb, 0xac, 0x32, 0xdb, 0x6a, 0xa1, 0x1d, 0x23, 0xf4, 0x38, 0xdc,
	0xd0, 0x42, 0x95, 0xc4, 0x41, 0xe5, 0x38, 0xf2, 0x13, 0x8c, 0x9a, 0x8e, 0x6b, 0x28, 0xad, 0x34,
	0x63, 0xb0, 0x39, 0xb5, 0x9f, 0x9c, 0x69, 0xf9, 0xc9, 0x99, 0xbe, 0xd6, 0x9f, 0x9c, 0x72, 0xaa,
	0xbd, 0x9b, 0xa6, 0x2a, 0x00, 0xae, 0x7c, 0x44, 0xb6, 0x6a, 0x3a, 0x2d, 0x1f, 0x07, 0xdb, 0x37,
	0xb0, 0xd6, 0x7c, 0xe1, 0x33, 0x23, 0xf5, 0x94, 0xec, 0x18, 0x29, 0x7b, 0xea, 0x86, 0x58, 0xe4,
	0xbc, 0x47, 0xc1, 0x2b, 0x3d, 0x45, 0x82, 0xe6, 0xa5, 0xea, 0xc7, 0x0f, 0x5a, 0xee, 0xbd, 0x26,
	0x71, 0x7d, 0x1a, 0x57, 0x5f, 0x8f, 0xc5, 0x61, 0x58, 0xf3, 0x63, 0xc3, 0x0f, 0x6d, 0x9f, 0xae,
	0x10, 0x9a, 0x1a, 0xa1, 0x49, 0x78, 0xd7, 0x2c, 0x07, 0x3d, 0xf3, 0x97, 0x64, 0x30, 0xac, 0xb9,
	0xb7, 0xa1, 0xd7, 0x76, 0xf5, 0x8d, 0xc7, 0x72, 0xe3, 0xed, 0xdd, 0x35, 0x5e, 0x40, 0xfe, 0x7e,
	0x35, 0xd6, 0x1f, 0xb5, 0xf4, 0x54, 0x48, 0x75, 0xf0, 0xf2, 0xf9, 0xf3, 0x97, 0xfb, 0xdf, 0xac,
	0xbf, 0xeb, 0xe6, 0x27, 0x27, 0x7d, 0x53, 0xf2, 0xcb, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0xf9,
	0x55, 0x40, 0xbc, 0xd7, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalendarServiceClient is the client API for CalendarService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalendarServiceClient interface {
	// Returns metadata for a calendar.
	GetCalendar(ctx context.Context, in *GetCalendarRequest, opts ...grpc.CallOption) (*Calendar, error)
	// Creates a secondary calendar.
	CreateCalendar(ctx context.Context, in *CreateCalendarRequest, opts ...grpc.CallOption) (*Calendar, error)
	// Deletes a secondary calendar.
	DeleteCalendar(ctx context.Context, in *DeleteCalendarRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Lists events in a calendar.
	ListEvents(ctx context.Context, in *ListEventsRequest, opts ...grpc.CallOption) (*ListEventsResponse, error)
	// Gets an event.
	GetEvent(ctx context.Context, in *GetEventRequest, opts ...grpc.CallOption) (*Event, error)
	// Creates an event in a calendar.
	CreateEvent(ctx context.Context, in *CreateEventRequest, opts ...grpc.CallOption) (*Event, error)
	// Deletes an event.
	DeleteEvent(ctx context.Context, in *DeleteEventRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type calendarServiceClient struct {
	cc *grpc.ClientConn
}

func NewCalendarServiceClient(cc *grpc.ClientConn) CalendarServiceClient {
	return &calendarServiceClient{cc}
}

func (c *calendarServiceClient) GetCalendar(ctx context.Context, in *GetCalendarRequest, opts ...grpc.CallOption) (*Calendar, error) {
	out := new(Calendar)
	err := c.cc.Invoke(ctx, "/kordevaus.CalendarService/GetCalendar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarServiceClient) CreateCalendar(ctx context.Context, in *CreateCalendarRequest, opts ...grpc.CallOption) (*Calendar, error) {
	out := new(Calendar)
	err := c.cc.Invoke(ctx, "/kordevaus.CalendarService/CreateCalendar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarServiceClient) DeleteCalendar(ctx context.Context, in *DeleteCalendarRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/kordevaus.CalendarService/DeleteCalendar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarServiceClient) ListEvents(ctx context.Context, in *ListEventsRequest, opts ...grpc.CallOption) (*ListEventsResponse, error) {
	out := new(ListEventsResponse)
	err := c.cc.Invoke(ctx, "/kordevaus.CalendarService/ListEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarServiceClient) GetEvent(ctx context.Context, in *GetEventRequest, opts ...grpc.CallOption) (*Event, error) {
	out := new(Event)
	err := c.cc.Invoke(ctx, "/kordevaus.CalendarService/GetEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarServiceClient) CreateEvent(ctx context.Context, in *CreateEventRequest, opts ...grpc.CallOption) (*Event, error) {
	out := new(Event)
	err := c.cc.Invoke(ctx, "/kordevaus.CalendarService/CreateEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarServiceClient) DeleteEvent(ctx context.Context, in *DeleteEventRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/kordevaus.CalendarService/DeleteEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalendarServiceServer is the server API for CalendarService service.
type CalendarServiceServer interface {
	// Returns metadata for a calendar.
	GetCalendar(context.Context, *GetCalendarRequest) (*Calendar, error)
	// Creates a secondary calendar.
	CreateCalendar(context.Context, *CreateCalendarRequest) (*Calendar, error)
	// Deletes a secondary calendar.
	DeleteCalendar(context.Context, *DeleteCalendarRequest) (*empty.Empty, error)
	// Lists events in a calendar.
	ListEvents(context.Context, *ListEventsRequest) (*ListEventsResponse, error)
	// Gets an event.
	GetEvent(context.Context, *GetEventRequest) (*Event, error)
	// Creates an event in a calendar.
	CreateEvent(context.Context, *CreateEventRequest) (*Event, error)
	// Deletes an event.
	DeleteEvent(context.Context, *DeleteEventRequest) (*empty.Empty, error)
}

// UnimplementedCalendarServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCalendarServiceServer struct {
}

func (*UnimplementedCalendarServiceServer) GetCalendar(ctx context.Context, req *GetCalendarRequest) (*Calendar, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCalendar not implemented")
}
func (*UnimplementedCalendarServiceServer) CreateCalendar(ctx context.Context, req *CreateCalendarRequest) (*Calendar, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCalendar not implemented")
}
func (*UnimplementedCalendarServiceServer) DeleteCalendar(ctx context.Context, req *DeleteCalendarRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCalendar not implemented")
}
func (*UnimplementedCalendarServiceServer) ListEvents(ctx context.Context, req *ListEventsRequest) (*ListEventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListEvents not implemented")
}
func (*UnimplementedCalendarServiceServer) GetEvent(ctx context.Context, req *GetEventRequest) (*Event, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEvent not implemented")
}
func (*UnimplementedCalendarServiceServer) CreateEvent(ctx context.Context, req *CreateEventRequest) (*Event, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEvent not implemented")
}
func (*UnimplementedCalendarServiceServer) DeleteEvent(ctx context.Context, req *DeleteEventRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEvent not implemented")
}

func RegisterCalendarServiceServer(s *grpc.Server, srv CalendarServiceServer) {
	s.RegisterService(&_CalendarService_serviceDesc, srv)
}

func _CalendarService_GetCalendar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCalendarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServiceServer).GetCalendar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kordevaus.CalendarService/GetCalendar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServiceServer).GetCalendar(ctx, req.(*GetCalendarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalendarService_CreateCalendar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCalendarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServiceServer).CreateCalendar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kordevaus.CalendarService/CreateCalendar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServiceServer).CreateCalendar(ctx, req.(*CreateCalendarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalendarService_DeleteCalendar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCalendarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServiceServer).DeleteCalendar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kordevaus.CalendarService/DeleteCalendar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServiceServer).DeleteCalendar(ctx, req.(*DeleteCalendarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalendarService_ListEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListEventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServiceServer).ListEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kordevaus.CalendarService/ListEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServiceServer).ListEvents(ctx, req.(*ListEventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalendarService_GetEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServiceServer).GetEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kordevaus.CalendarService/GetEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServiceServer).GetEvent(ctx, req.(*GetEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalendarService_CreateEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServiceServer).CreateEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kordevaus.CalendarService/CreateEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServiceServer).CreateEvent(ctx, req.(*CreateEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalendarService_DeleteEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServiceServer).DeleteEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kordevaus.CalendarService/DeleteEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServiceServer).DeleteEvent(ctx, req.(*DeleteEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CalendarService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kordevaus.CalendarService",
	HandlerType: (*CalendarServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCalendar",
			Handler:    _CalendarService_GetCalendar_Handler,
		},
		{
			MethodName: "CreateCalendar",
			Handler:    _CalendarService_CreateCalendar_Handler,
		},
		{
			MethodName: "DeleteCalendar",
			Handler:    _CalendarService_DeleteCalendar_Handler,
		},
		{
			MethodName: "ListEvents",
			Handler:    _CalendarService_ListEvents_Handler,
		},
		{
			MethodName: "GetEvent",
			Handler:    _CalendarService_GetEvent_Handler,
		},
		{
			MethodName: "CreateEvent",
			Handler:    _CalendarService_CreateEvent_Handler,
		},
		{
			MethodName: "DeleteEvent",
			Handler:    _CalendarService_DeleteEvent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/calendar.proto",
}
